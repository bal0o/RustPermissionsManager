{
  "version": 3,
  "sources": ["../../@mui/material/TextareaAutosize/TextareaAutosize.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\nfunction isEmpty(obj) {\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n      onChange,\n      maxRows,\n      minRows = 1,\n      style,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const textareaRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, textareaRef);\n  const heightRef = React.useRef(null);\n  const hiddenTextareaRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const hiddenTextarea = hiddenTextareaRef.current;\n    if (!textarea || !hiddenTextarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    const computedStyle = containerWindow.getComputedStyle(textarea);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n    hiddenTextarea.style.width = computedStyle.width;\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      hiddenTextarea.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = hiddenTextarea.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    hiddenTextarea.value = 'x';\n    const singleRowHeight = hiddenTextarea.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const didHeightChange = useEventCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return false;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    return heightRef.current != null && heightRef.current !== outerHeightStyle;\n  });\n  const syncHeight = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      textarea.style.height = `${outerHeightStyle}px`;\n    }\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  const frameRef = React.useRef(-1);\n  useEnhancedEffect(() => {\n    const debouncedHandleResize = debounce(syncHeight);\n    const textarea = textareaRef == null ? void 0 : textareaRef.current;\n    if (!textarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    containerWindow.addEventListener('resize', debouncedHandleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        if (didHeightChange()) {\n          // avoid \"ResizeObserver loop completed with undelivered notifications\" error\n          // by temporarily unobserving the textarea element while manipulating the height\n          // and reobserving one frame later\n          resizeObserver.unobserve(textarea);\n          cancelAnimationFrame(frameRef.current);\n          syncHeight();\n          frameRef.current = requestAnimationFrame(() => {\n            resizeObserver.observe(textarea);\n          });\n        }\n      });\n      resizeObserver.observe(textarea);\n    }\n    return () => {\n      debouncedHandleResize.clear();\n      cancelAnimationFrame(frameRef.current);\n      containerWindow.removeEventListener('resize', debouncedHandleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight, didHeightChange]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: hiddenTextareaRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        paddingTop: 0,\n        paddingBottom: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA,YAAuB;AACvB,wBAAsB;AACtB;AACA,yBAA4B;AAC5B,IAAAA,sBAA8B;AAL9B,IAAM,YAAY,CAAC,YAAY,WAAW,WAAW,SAAS,OAAO;AAMrE,SAAS,cAAc,OAAO;AAC5B,SAAO,SAAS,OAAO,EAAE,KAAK;AAChC;AACA,IAAM,SAAS;AAAA,EACb,QAAQ;AAAA;AAAA,IAEN,YAAY;AAAA;AAAA,IAEZ,UAAU;AAAA;AAAA,IAEV,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA;AAAA,IAEN,WAAW;AAAA,EACb;AACF;AACA,SAAS,cAAc,QAAQ;AAE7B,aAAW,KAAK,QAAQ;AACtB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,SAAS,QAAQ,KAAK;AACpB,SAAO,cAAc,GAAG,KAAK,IAAI,qBAAqB,KAAK,CAAC,IAAI;AAClE;AAYA,IAAM,mBAAsC,iBAAW,SAASC,kBAAiB,OAAO,cAAc;AACpG,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA;AAAA,EACF,IAAI,OACJ,QAAQ,8BAA8B,OAAO,SAAS;AACxD,QAAM;AAAA,IACJ,SAAS;AAAA,EACX,IAAU,aAAO,SAAS,IAAI;AAC9B,QAAM,cAAoB,aAAO,IAAI;AACrC,QAAM,YAAY,WAAW,cAAc,WAAW;AACtD,QAAM,YAAkB,aAAO,IAAI;AACnC,QAAM,oBAA0B,aAAO,IAAI;AAC3C,QAAM,0BAAgC,kBAAY,MAAM;AACtD,UAAM,WAAW,YAAY;AAC7B,UAAM,iBAAiB,kBAAkB;AACzC,QAAI,CAAC,YAAY,CAAC,gBAAgB;AAChC,aAAO;AAAA,IACT;AACA,UAAM,kBAAkB,YAAY,QAAQ;AAC5C,UAAM,gBAAgB,gBAAgB,iBAAiB,QAAQ;AAG/D,QAAI,cAAc,UAAU,OAAO;AACjC,aAAO;AAAA,QACL,kBAAkB;AAAA,QAClB,aAAa;AAAA,MACf;AAAA,IACF;AACA,mBAAe,MAAM,QAAQ,cAAc;AAC3C,mBAAe,QAAQ,SAAS,SAAS,MAAM,eAAe;AAC9D,QAAI,eAAe,MAAM,MAAM,EAAE,MAAM,MAAM;AAI3C,qBAAe,SAAS;AAAA,IAC1B;AACA,UAAM,YAAY,cAAc;AAChC,UAAM,UAAU,cAAc,cAAc,aAAa,IAAI,cAAc,cAAc,UAAU;AACnG,UAAM,SAAS,cAAc,cAAc,iBAAiB,IAAI,cAAc,cAAc,cAAc;AAG1G,UAAM,cAAc,eAAe;AAGnC,mBAAe,QAAQ;AACvB,UAAM,kBAAkB,eAAe;AAGvC,QAAI,cAAc;AAClB,QAAI,SAAS;AACX,oBAAc,KAAK,IAAI,OAAO,OAAO,IAAI,iBAAiB,WAAW;AAAA,IACvE;AACA,QAAI,SAAS;AACX,oBAAc,KAAK,IAAI,OAAO,OAAO,IAAI,iBAAiB,WAAW;AAAA,IACvE;AACA,kBAAc,KAAK,IAAI,aAAa,eAAe;AAGnD,UAAM,mBAAmB,eAAe,cAAc,eAAe,UAAU,SAAS;AACxF,UAAM,cAAc,KAAK,IAAI,cAAc,WAAW,KAAK;AAC3D,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,SAAS,MAAM,WAAW,CAAC;AACxC,QAAM,kBAAkB,yBAAiB,MAAM;AAC7C,UAAM,WAAW,YAAY;AAC7B,UAAM,iBAAiB,wBAAwB;AAC/C,QAAI,CAAC,YAAY,CAAC,kBAAkB,QAAQ,cAAc,GAAG;AAC3D,aAAO;AAAA,IACT;AACA,UAAM,mBAAmB,eAAe;AACxC,WAAO,UAAU,WAAW,QAAQ,UAAU,YAAY;AAAA,EAC5D,CAAC;AACD,QAAM,aAAmB,kBAAY,MAAM;AACzC,UAAM,WAAW,YAAY;AAC7B,UAAM,iBAAiB,wBAAwB;AAC/C,QAAI,CAAC,YAAY,CAAC,kBAAkB,QAAQ,cAAc,GAAG;AAC3D;AAAA,IACF;AACA,UAAM,mBAAmB,eAAe;AACxC,QAAI,UAAU,YAAY,kBAAkB;AAC1C,gBAAU,UAAU;AACpB,eAAS,MAAM,SAAS,GAAG,gBAAgB;AAAA,IAC7C;AACA,aAAS,MAAM,WAAW,eAAe,cAAc,WAAW;AAAA,EACpE,GAAG,CAAC,uBAAuB,CAAC;AAC5B,QAAM,WAAiB,aAAO,EAAE;AAChC,4BAAkB,MAAM;AACtB,UAAM,wBAAwB,SAAS,UAAU;AACjD,UAAM,WAAW,eAAe,OAAO,SAAS,YAAY;AAC5D,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AACA,UAAM,kBAAkB,YAAY,QAAQ;AAC5C,oBAAgB,iBAAiB,UAAU,qBAAqB;AAChE,QAAI;AACJ,QAAI,OAAO,mBAAmB,aAAa;AACzC,uBAAiB,IAAI,eAAe,MAAM;AACxC,YAAI,gBAAgB,GAAG;AAIrB,yBAAe,UAAU,QAAQ;AACjC,+BAAqB,SAAS,OAAO;AACrC,qBAAW;AACX,mBAAS,UAAU,sBAAsB,MAAM;AAC7C,2BAAe,QAAQ,QAAQ;AAAA,UACjC,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AACD,qBAAe,QAAQ,QAAQ;AAAA,IACjC;AACA,WAAO,MAAM;AACX,4BAAsB,MAAM;AAC5B,2BAAqB,SAAS,OAAO;AACrC,sBAAgB,oBAAoB,UAAU,qBAAqB;AACnE,UAAI,gBAAgB;AAClB,uBAAe,WAAW;AAAA,MAC5B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,yBAAyB,YAAY,eAAe,CAAC;AACzD,4BAAkB,MAAM;AACtB,eAAW;AAAA,EACb,CAAC;AACD,QAAM,eAAe,WAAS;AAC5B,QAAI,CAAC,cAAc;AACjB,iBAAW;AAAA,IACb;AACA,QAAI,UAAU;AACZ,eAAS,KAAK;AAAA,IAChB;AAAA,EACF;AACA,aAAoB,oBAAAC,MAAY,gBAAU;AAAA,IACxC,UAAU,KAAc,mBAAAC,KAAK,YAAY,SAAS;AAAA,MAChD;AAAA,MACA,UAAU;AAAA,MACV,KAAK;AAAA,MAGL,MAAM;AAAA,MACN;AAAA,IACF,GAAG,KAAK,CAAC,OAAgB,mBAAAA,KAAK,YAAY;AAAA,MACxC,eAAe;AAAA,MACf,WAAW,MAAM;AAAA,MACjB,UAAU;AAAA,MACV,KAAK;AAAA,MACL,UAAU;AAAA,MACV,OAAO,SAAS,CAAC,GAAG,OAAO,QAAQ,OAAO;AAAA,QACxC,YAAY;AAAA,QACZ,eAAe;AAAA,MACjB,CAAC;AAAA,IACH,CAAC,CAAC;AAAA,EACJ,CAAC;AACH,CAAC;AACD,OAAwC,iBAAiB,YAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ1F,WAAW,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA,EAIrB,SAAS,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjE,SAAS,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,EAIjE,UAAU,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpB,aAAa,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIvB,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIjB,OAAO,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,GAAG,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,MAAM,CAAC;AACtG,IAAI;AACJ,IAAO,2BAAQ;",
  "names": ["import_jsx_runtime", "TextareaAutosize", "_jsxs", "_jsx", "PropTypes"]
}
